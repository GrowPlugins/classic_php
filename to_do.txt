TO DO:

0.3.0
- Make MYSQLPDO_Manage::alter_table_query() so it uses parameters to
simplify the creation of an SQL update statement.
- Force all queries to be secured via PDO unless $return_string_only
is true? Otherwise queries without prepared statements are totally
insecure, which isn't a useful option.
- Secure MYSQLPDO_Manage methods using prepared statements wherever
possible. Also secure MYSQLPDO::query_table_fields().

0.4.0
- Add more error methods to ErrorHandling, such as for backtracing/var
dumping, without throwing an error, or for throwing an error without var
dump. (Consider that some methods might be aimed at manual debugging only,
while others might be aimed at error handling within project code. Some
code might only execute when a constant variable exists or results to a
certain value [for internal debugging options built into code].)

0.5.0
- Rename array_processing to just array and start adding methods that
just use PHP array functions. (Comparable to JavaScript's Array class.)
- Add a method to array:: which allows you to check the next key value.
- Add a method to array:: which tests for an empty array (like
[] === || empty() )
- Add a string class, and start adding methods that just use PHP string
functions.  (Comparable to JavaScript's String class.)
- Add a method to string:: which allows you to replace an occurance of a
string with a replacement string.
- Add a method to string:: which allows you to remove an occurance of a
string.
- Make MySQLPDO_Read::build_condition_list so AND conditional operator is
automatically placed between conditions where no conditional operator is
provided, and any trailing conditional operator at list end is removed
automatically.

0.6.0
- Create a FileProcessing class for reading json, ini, other files, and
for writing those files too.
- Create string processing class, including method for validating string
data using preg_match()?
- Create form class with validation methods for POST variables?
